(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
var facebook_app_id;

facebook_app_id = '1495109164043412';

require("./services");

require("./filters");

require("./directives");

require("./controllers");

angular.module('iwishua', ['ngTouch', 'ngRoute', 'ngFacebook', 'breeze.angular', 'iwishua.services', 'iwishua.filters', 'iwishua.directives', 'iwishua.controllers']).config(function($routeProvider, $facebookProvider) {
  $facebookProvider.setAppId("" + facebook_app_id);
  $facebookProvider.setPermissions("publish_stream");
  $facebookProvider.setCustomInit({
    xfbml: true,
    version: 'v2.0'
  });
  return $routeProvider.when('/', {
    templateUrl: 'partials/wish.html',
    controller: 'WishController'
  }).when('/list/:skip', {
    templateUrl: 'partials/wish.html',
    controller: 'WishController'
  }).when('/hidden', {
    templateUrl: 'partials/hidden.html',
    controller: 'HiddenController'
  }).when('/hidden/:skip', {
    templateUrl: 'partials/hidden.html',
    controller: 'HiddenController'
  }).when('/about', {
    templateUrl: 'partials/about.html',
    controller: 'AboutController'
  }).when('/privacy', {
    templateUrl: 'partials/privacy.html',
    controller: 'AboutController'
  }).when('/support', {
    templateUrl: 'partials/about.html',
    controller: 'AboutController'
  }).otherwise({
    redirectTo: '/'
  });
}).run(function() {
  (function(d) {
    var id, js, ref;
    id = "facebook-jssdk";
    ref = d.getElementsByTagName("script")[0];
    if (d.getElementById(id)) {
      return;
    }
    js = d.createElement("script");
    js.id = id;
    js.async = true;
    js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=" + facebook_app_id;
    return ref.parentNode.insertBefore(js, ref);
  })(document);
  if (document.addEventListener) {
    return document.addEventListener('touchmove', function(e) {
      return e.preventDefault();
    });
  }
});

},{"./controllers":2,"./directives":8,"./filters":9,"./services":10}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
angular.module('iwishua.controllers', []).controller('FBController', ['$scope', 'logger', '$facebook', require('./controllers/FBController')]).controller('AboutController', ['$scope', 'logger', require('./controllers/AboutController')]).controller('PrivacyController', ['$scope', 'logger', require('./controllers/PrivacyController')]).controller('ListController', ['$scope', 'logger', require('./controllers/ListController')]).controller('WishController', ['$scope', 'logger', 'entityManager', '$routeParams', '$location', require('./controllers/WishController')]);

},{"./controllers/AboutController":3,"./controllers/FBController":4,"./controllers/ListController":5,"./controllers/PrivacyController":6,"./controllers/WishController":7}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
module.exports = function($scope, logger) {};

},{}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
module.exports = function($scope, logger, $facebook) {
  return $facebook.api("/me").then(function(response) {
    return $scope.username = response.first_name;
  });
};

},{}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
var ListController;

ListController = (function() {
  function ListController($scope, logger) {
    logger.info("List");
  }

  return ListController;

})();

module.exports = ListController;

},{}],6:[function(require,module,exports){
module.exports=require(3)
},{}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
module.exports = function($scope, logger, entityManager, $routeParams, $location) {
  var perPage, spinner;
  perPage = 5;
  if ($routeParams.skip == null) {
    $routeParams.skip = 0;
  }
  $scope.navLeft = function($event) {
    return $location.path("/list/" + (parseInt($routeParams.skip, 10) + perPage));
  };
  $scope.navRight = function($event) {
    return $location.path("/list/" + (Math.max(parseInt($routeParams.skip, 10) - perPage, 0)));
  };
  spinner = new Spinner({
    radius: 30,
    width: 8,
    length: 16
  });
  spinner.spin(document.getElementById('wish-spinner'));
  return entityManager.getProducts($routeParams.skip).then(function(data) {
    var masonry;
    $(".wish-splash").hide();
    spinner.stop();
    $scope.skip = parseInt($routeParams.skip, 10) + perPage;
    entityManager.parseProducts($scope, data);
    return (masonry = $(".js-masonry")).imagesLoaded(function() {
      return masonry.masonry();
    });
  });
};

},{}],8:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
angular.module('iwishua.directives', []).directive('appVersion', function(version) {
  return {
    restrict: 'A',
    link: function($scope, $element, $attrs) {
      return $element.text(version);
    }
  };
}).directive('fixCollapse', function($document) {
  return {
    restrict: 'A',
    link: function($scope, $element, $attrs) {
      $element.collapse({
        toggle: false
      });
      return $document.on('click', function() {
        return $element.collapse('hide');
      });
    }
  };
});

},{}],9:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
angular.module('iwishua.filters', []).filter('capitalise', function(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});

},{}],10:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
angular.module('iwishua.services', []).value('version', '0.1.0').service('logger', ['$log', require('./services/Logger')]).service('entityManager', ['breeze', 'logger', require('./services/Products')]);

},{"./services/Logger":11,"./services/Products":12}],11:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
var Logger;

Logger = (function() {
  toastr.options.timeOut = 2000;

  toastr.options.positionClass = 'toast-bottom-right';

  function Logger($log) {
    this.$log = $log;
  }

  Logger.prototype.error = function(message, title) {
    toastr.error(message, title);
    return this.$log.error("Error: " + message);
  };

  Logger.prototype.info = function(message, title) {
    toastr.info(message, title);
    return this.$log.info("Info: " + message);
  };

  Logger.prototype.log = function(message) {
    return this.$log.log(message);
  };

  Logger.prototype.success = function(message, title) {
    toastr.info(message, title);
    return this.$log.info("Success: " + message);
  };

  Logger.prototype.warning = function(message, title) {
    toastr.info(message, title);
    return this.$log.warn("Warning: " + message);
  };

  return Logger;

})();

module.exports = Logger;

},{}],12:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
'use strict';
var Products;

Products = (function() {
  function Products(breeze, logger) {
    var metadataHelper, metadataStore, modelNamespace, serviceName;
    this.breeze = breeze;
    this.logger = logger;
    serviceName = "https://iwishuadata.azure-mobile.net/";
    modelNamespace = "Iwishua.Models";
    this.modelName = "iwishuaproducts";
    metadataStore = new this.breeze.MetadataStore({
      namingConvention: this.breeze.NamingConvention.camelCase
    });
    metadataHelper = new this.breeze.config.MetadataHelper(modelNamespace);
    metadataHelper.addTypeToStore(metadataStore, {
      namespace: modelNamespace,
      shortName: this.modelName,
      defaultResourceName: this.modelName,
      dataProperties: {
        id: {
          maxLength: 36
        },
        productId: {
          maxLength: 36
        },
        productTitle: {
          maxLength: 4000
        },
        productDescription: {
          maxLength: 4000
        },
        productImageUrl: {
          maxLength: 4000
        },
        productBuyUrl: {
          maxLength: 4000
        },
        productKeywords: {
          maxLength: 4000
        },
        impressionUrl: {
          maxLength: 4000
        },
        isPublished: {
          dataType: this.breeze.DataType.Boolean
        }
      }
    });
    metadataHelper.addDataService(metadataStore, serviceName);
    this.entityManager = new this.breeze.EntityManager({
      metadataStore: metadataStore,
      serviceName: serviceName
    });
  }

  Products.prototype.getProducts = function(skip, take) {
    var query;
    if (skip == null) {
      skip = 0;
    }
    if (take == null) {
      take = 5;
    }
    query = this.breeze.EntityQuery.from("tables/" + this.modelName).skip(parseInt(skip, 10)).take(parseInt(take, 10)).where('isPublished', 'eq', true).inlineCount(true);
    return this.entityManager.executeQuery(query)["catch"]((function(_this) {
      return function(error) {
        _this.logger.error(error.message, "Query failed");
        throw error;
      };
    })(this));
  };

  Products.prototype.parseProducts = function($scope, data) {
    var attrs, name, title, word, words, _i, _j, _len, _len1, _ref, _ref1, _results;
    $scope.count = data.results[0].count;
    $scope.products = data.results[0].results;
    _ref = $scope.products;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      attrs = _ref[_i];
      title = attrs.productTitle;
      if (title.slice(0, 1) === '"') {
        title = title.slice(1, -1);
      }
      words = title.replace(/[-,.©®™]/g, ' ').replace(/([a-z])([A-Z])/g, "$1 $2").split(/\s+/);
      title = words.join(' ');
      attrs.productTitle = title;
      name = '';
      while (!(name.length > 20 || words.length === 0)) {
        name = words.pop() + ' ' + name.substr(0, 1).toUpperCase() + name.substr(1);
      }
      attrs.productName = name;
      attrs.className = 'ww2';
      _ref1 = name.split(/\s+/);
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        word = _ref1[_j];
        if (word.length > 7) {
          attrs.className = 'hh2';
        }
      }
      if (attrs.className === 'ww2') {
        if ((Math.floor(Math.random() * new Date().getTime())) & 1) {
          _results.push(attrs.aligned = 'alignleft');
        } else {
          _results.push(attrs.aligned = 'alignright');
        }
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return Products;

})();

module.exports = Products;

},{}]},{},[1])
//@ sourceMappingURL=data:application/json;base64,
